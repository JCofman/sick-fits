// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Nav> renders full nav when signed in 1`] = `
Array [
  <NavStyles
    data-test="nav"
  >
    <StyledComponent
      data-test="nav"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "NavStyles-sc-11c0d2g-0",
            "isStatic": false,
            "lastClassName": "fRhaWC",
            "rules": Array [
              "margin:0;padding:0;display:flex;justify-self:end;font-size:2rem;a,button{padding:1rem 3rem;display:flex;align-items:center;position:relative;text-transform:uppercase;font-weight:900;font-size:1em;background:none;border:0;cursor:pointer;color:",
              [Function],
              ";font-weight:800;@media (max-width:700px){font-size:10px;padding:0 10px;}&:before{content:\\"\\";width:2px;background:",
              [Function],
              ";height:100%;left:0;position:absolute;transform:skew(-20deg);top:0;bottom:0;}&:after{height:2px;background:red;content:\\"\\";width:0;position:absolute;transform:translateX(-50%);transition:width 0.4s;transition-timing-function:cubic-bezier(1,-0.65,0,2.31);left:50%;margin-top:2rem;}&:hover,&:focus{outline:none;&:after{width:calc(100% - 60px);}@media (max-width:700px){width:calc(100% - 10px);}}}@media (max-width:1300px){border-top:1px solid ",
              [Function],
              ";width:100%;justify-content:center;font-size:1.5rem;}",
            ],
          },
          "displayName": "NavStyles",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "NavStyles-sc-11c0d2g-0",
          "target": "ul",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <ul
        className="NavStyles-sc-11c0d2g-0 fRhaWC"
        data-test="nav"
      >
        <Link
          href="/items"
        >
          <a
            href="/items"
            onClick={[Function]}
          >
            Shop
          </a>
        </Link>
        <Link
          href="/sell"
        >
          <a
            href="/sell"
            onClick={[Function]}
          >
            Sell
          </a>
        </Link>
        <Link
          href="/orders"
        >
          <a
            href="/orders"
            onClick={[Function]}
          >
            Orders
          </a>
        </Link>
        <Link
          href="/me"
        >
          <a
            href="/me"
            onClick={[Function]}
          >
            Account
          </a>
        </Link>
        <Signout>
          <Mutation
            mutation={
              Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "SIGN_OUT_MUTATION",
                    },
                    "operation": "mutation",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "signout",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "message",
                                },
                                "selectionSet": undefined,
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 70,
                  "start": 0,
                },
              }
            }
            refetchQueries={
              Array [
                Object {
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": undefined,
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "me",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "permissions",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cart",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "quantity",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "item",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "price",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "image",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "title",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "description",
                                                },
                                                "selectionSet": undefined,
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 237,
                      "start": 0,
                    },
                  },
                },
              ]
            }
          >
            <button
              onClick={[Function]}
            >
              Sign Out
            </button>
          </Mutation>
        </Signout>
        <Mutation
          mutation={
            Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": undefined,
                  "operation": "mutation",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [
                          Object {
                            "arguments": Array [],
                            "kind": "Directive",
                            "name": Object {
                              "kind": "Name",
                              "value": "client",
                            },
                          },
                        ],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "toggleCart",
                        },
                        "selectionSet": undefined,
                      },
                    ],
                  },
                  "variableDefinitions": Array [],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 41,
                "start": 0,
              },
            }
          }
        >
          <button
            onClick={[Function]}
          >
            My Cart
             
            <CartCount
              count={0}
            >
              <CartCount__AnimationStyle>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "CartCount__AnimationStyle-xxvp4g-0",
                        "isStatic": true,
                        "lastClassName": "iJevmx",
                        "rules": Array [
                          "position:relative;.count{display:block;position:relative;transition:all 0.4s;backface-visibility:hidden;}.count-enter{transform:scale(4) rotateX(0.5turn);}.count-enter-active{transform:rotateX(0);}.count-exit{top:0;position:absolute;transform:rotateX(0);}.count-exit-active{transform:scale(4) rotateX(0.5turn);}",
                        ],
                      },
                      "displayName": "CartCount__AnimationStyle",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "CartCount__AnimationStyle-xxvp4g-0",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="CartCount__AnimationStyle-xxvp4g-0 iJevmx"
                  >
                    <TransitionGroup
                      childFactory={[Function]}
                      component="div"
                    >
                      <div>
                        <CSSTransition
                          className="count"
                          classNames="count"
                          in={true}
                          key=".$0"
                          onExited={[Function]}
                          timeOut={
                            Object {
                              "enter": 400,
                              "exit": 400,
                            }
                          }
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            className="count"
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeOut={
                              Object {
                                "enter": 400,
                                "exit": 400,
                              }
                            }
                            unmountOnExit={true}
                          >
                            <CartCount__Dot
                              className="count"
                              timeOut={
                                Object {
                                  "enter": 400,
                                  "exit": 400,
                                }
                              }
                            >
                              <StyledComponent
                                className="count"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "CartCount__Dot-xxvp4g-1",
                                      "isStatic": false,
                                      "lastClassName": "kDZyEW",
                                      "rules": Array [
                                        "background:",
                                        [Function],
                                        ";color:white;border-radius:50%;padding:0.5rem;line-height:2rem;min-width:3rem;margin-left:1rem;font-weight:100;font-feature-settings:\\"tnum\\";font-variant-numeric:tabular-nums;",
                                      ],
                                    },
                                    "displayName": "CartCount__Dot",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "CartCount__Dot-xxvp4g-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                timeOut={
                                  Object {
                                    "enter": 400,
                                    "exit": 400,
                                  }
                                }
                              >
                                <div
                                  className="count CartCount__Dot-xxvp4g-1 kDZyEW"
                                >
                                  0
                                </div>
                              </StyledComponent>
                            </CartCount__Dot>
                          </Transition>
                        </CSSTransition>
                      </div>
                    </TransitionGroup>
                  </span>
                </StyledComponent>
              </CartCount__AnimationStyle>
            </CartCount>
          </button>
        </Mutation>
      </ul>
    </StyledComponent>
  </NavStyles>,
  <StyledComponent
    data-test="nav"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "NavStyles-sc-11c0d2g-0",
          "isStatic": false,
          "lastClassName": "fRhaWC",
          "rules": Array [
            "margin:0;padding:0;display:flex;justify-self:end;font-size:2rem;a,button{padding:1rem 3rem;display:flex;align-items:center;position:relative;text-transform:uppercase;font-weight:900;font-size:1em;background:none;border:0;cursor:pointer;color:",
            [Function],
            ";font-weight:800;@media (max-width:700px){font-size:10px;padding:0 10px;}&:before{content:\\"\\";width:2px;background:",
            [Function],
            ";height:100%;left:0;position:absolute;transform:skew(-20deg);top:0;bottom:0;}&:after{height:2px;background:red;content:\\"\\";width:0;position:absolute;transform:translateX(-50%);transition:width 0.4s;transition-timing-function:cubic-bezier(1,-0.65,0,2.31);left:50%;margin-top:2rem;}&:hover,&:focus{outline:none;&:after{width:calc(100% - 60px);}@media (max-width:700px){width:calc(100% - 10px);}}}@media (max-width:1300px){border-top:1px solid ",
            [Function],
            ";width:100%;justify-content:center;font-size:1.5rem;}",
          ],
        },
        "displayName": "NavStyles",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "NavStyles-sc-11c0d2g-0",
        "target": "ul",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <ul
      className="NavStyles-sc-11c0d2g-0 fRhaWC"
      data-test="nav"
    >
      <Link
        href="/items"
      >
        <a
          href="/items"
          onClick={[Function]}
        >
          Shop
        </a>
      </Link>
      <Link
        href="/sell"
      >
        <a
          href="/sell"
          onClick={[Function]}
        >
          Sell
        </a>
      </Link>
      <Link
        href="/orders"
      >
        <a
          href="/orders"
          onClick={[Function]}
        >
          Orders
        </a>
      </Link>
      <Link
        href="/me"
      >
        <a
          href="/me"
          onClick={[Function]}
        >
          Account
        </a>
      </Link>
      <Signout>
        <Mutation
          mutation={
            Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "SIGN_OUT_MUTATION",
                  },
                  "operation": "mutation",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "signout",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "message",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 70,
                "start": 0,
              },
            }
          }
          refetchQueries={
            Array [
              Object {
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "me",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "permissions",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cart",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "quantity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "item",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "price",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "image",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "title",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "description",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 237,
                    "start": 0,
                  },
                },
              },
            ]
          }
        >
          <button
            onClick={[Function]}
          >
            Sign Out
          </button>
        </Mutation>
      </Signout>
      <Mutation
        mutation={
          Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": undefined,
                "operation": "mutation",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [
                        Object {
                          "arguments": Array [],
                          "kind": "Directive",
                          "name": Object {
                            "kind": "Name",
                            "value": "client",
                          },
                        },
                      ],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "toggleCart",
                      },
                      "selectionSet": undefined,
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 41,
              "start": 0,
            },
          }
        }
      >
        <button
          onClick={[Function]}
        >
          My Cart
           
          <CartCount
            count={0}
          >
            <CartCount__AnimationStyle>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "CartCount__AnimationStyle-xxvp4g-0",
                      "isStatic": true,
                      "lastClassName": "iJevmx",
                      "rules": Array [
                        "position:relative;.count{display:block;position:relative;transition:all 0.4s;backface-visibility:hidden;}.count-enter{transform:scale(4) rotateX(0.5turn);}.count-enter-active{transform:rotateX(0);}.count-exit{top:0;position:absolute;transform:rotateX(0);}.count-exit-active{transform:scale(4) rotateX(0.5turn);}",
                      ],
                    },
                    "displayName": "CartCount__AnimationStyle",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "CartCount__AnimationStyle-xxvp4g-0",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="CartCount__AnimationStyle-xxvp4g-0 iJevmx"
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div>
                      <CSSTransition
                        className="count"
                        classNames="count"
                        in={true}
                        key=".$0"
                        onExited={[Function]}
                        timeOut={
                          Object {
                            "enter": 400,
                            "exit": 400,
                          }
                        }
                        unmountOnExit={true}
                      >
                        <Transition
                          appear={false}
                          className="count"
                          enter={true}
                          exit={true}
                          in={true}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeOut={
                            Object {
                              "enter": 400,
                              "exit": 400,
                            }
                          }
                          unmountOnExit={true}
                        >
                          <CartCount__Dot
                            className="count"
                            timeOut={
                              Object {
                                "enter": 400,
                                "exit": 400,
                              }
                            }
                          >
                            <StyledComponent
                              className="count"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "CartCount__Dot-xxvp4g-1",
                                    "isStatic": false,
                                    "lastClassName": "kDZyEW",
                                    "rules": Array [
                                      "background:",
                                      [Function],
                                      ";color:white;border-radius:50%;padding:0.5rem;line-height:2rem;min-width:3rem;margin-left:1rem;font-weight:100;font-feature-settings:\\"tnum\\";font-variant-numeric:tabular-nums;",
                                    ],
                                  },
                                  "displayName": "CartCount__Dot",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "CartCount__Dot-xxvp4g-1",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              timeOut={
                                Object {
                                  "enter": 400,
                                  "exit": 400,
                                }
                              }
                            >
                              <div
                                className="count CartCount__Dot-xxvp4g-1 kDZyEW"
                              >
                                0
                              </div>
                            </StyledComponent>
                          </CartCount__Dot>
                        </Transition>
                      </CSSTransition>
                    </div>
                  </TransitionGroup>
                </span>
              </StyledComponent>
            </CartCount__AnimationStyle>
          </CartCount>
        </button>
      </Mutation>
    </ul>
  </StyledComponent>,
  <ul
    className="NavStyles-sc-11c0d2g-0 fRhaWC"
    data-test="nav"
  >
    <Link
      href="/items"
    >
      <a
        href="/items"
        onClick={[Function]}
      >
        Shop
      </a>
    </Link>
    <Link
      href="/sell"
    >
      <a
        href="/sell"
        onClick={[Function]}
      >
        Sell
      </a>
    </Link>
    <Link
      href="/orders"
    >
      <a
        href="/orders"
        onClick={[Function]}
      >
        Orders
      </a>
    </Link>
    <Link
      href="/me"
    >
      <a
        href="/me"
        onClick={[Function]}
      >
        Account
      </a>
    </Link>
    <Signout>
      <Mutation
        mutation={
          Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "SIGN_OUT_MUTATION",
                },
                "operation": "mutation",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "signout",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "message",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 70,
              "start": 0,
            },
          }
        }
        refetchQueries={
          Array [
            Object {
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "me",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "name",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "permissions",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cart",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "quantity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "item",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "price",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "image",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "title",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "description",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 237,
                  "start": 0,
                },
              },
            },
          ]
        }
      >
        <button
          onClick={[Function]}
        >
          Sign Out
        </button>
      </Mutation>
    </Signout>
    <Mutation
      mutation={
        Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "name": undefined,
              "operation": "mutation",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "alias": undefined,
                    "arguments": Array [],
                    "directives": Array [
                      Object {
                        "arguments": Array [],
                        "kind": "Directive",
                        "name": Object {
                          "kind": "Name",
                          "value": "client",
                        },
                      },
                    ],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "toggleCart",
                    },
                    "selectionSet": undefined,
                  },
                ],
              },
              "variableDefinitions": Array [],
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 41,
            "start": 0,
          },
        }
      }
    >
      <button
        onClick={[Function]}
      >
        My Cart
         
        <CartCount
          count={0}
        >
          <CartCount__AnimationStyle>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "CartCount__AnimationStyle-xxvp4g-0",
                    "isStatic": true,
                    "lastClassName": "iJevmx",
                    "rules": Array [
                      "position:relative;.count{display:block;position:relative;transition:all 0.4s;backface-visibility:hidden;}.count-enter{transform:scale(4) rotateX(0.5turn);}.count-enter-active{transform:rotateX(0);}.count-exit{top:0;position:absolute;transform:rotateX(0);}.count-exit-active{transform:scale(4) rotateX(0.5turn);}",
                    ],
                  },
                  "displayName": "CartCount__AnimationStyle",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "CartCount__AnimationStyle-xxvp4g-0",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="CartCount__AnimationStyle-xxvp4g-0 iJevmx"
              >
                <TransitionGroup
                  childFactory={[Function]}
                  component="div"
                >
                  <div>
                    <CSSTransition
                      className="count"
                      classNames="count"
                      in={true}
                      key=".$0"
                      onExited={[Function]}
                      timeOut={
                        Object {
                          "enter": 400,
                          "exit": 400,
                        }
                      }
                      unmountOnExit={true}
                    >
                      <Transition
                        appear={false}
                        className="count"
                        enter={true}
                        exit={true}
                        in={true}
                        mountOnEnter={false}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeOut={
                          Object {
                            "enter": 400,
                            "exit": 400,
                          }
                        }
                        unmountOnExit={true}
                      >
                        <CartCount__Dot
                          className="count"
                          timeOut={
                            Object {
                              "enter": 400,
                              "exit": 400,
                            }
                          }
                        >
                          <StyledComponent
                            className="count"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "CartCount__Dot-xxvp4g-1",
                                  "isStatic": false,
                                  "lastClassName": "kDZyEW",
                                  "rules": Array [
                                    "background:",
                                    [Function],
                                    ";color:white;border-radius:50%;padding:0.5rem;line-height:2rem;min-width:3rem;margin-left:1rem;font-weight:100;font-feature-settings:\\"tnum\\";font-variant-numeric:tabular-nums;",
                                  ],
                                },
                                "displayName": "CartCount__Dot",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "CartCount__Dot-xxvp4g-1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            timeOut={
                              Object {
                                "enter": 400,
                                "exit": 400,
                              }
                            }
                          >
                            <div
                              className="count CartCount__Dot-xxvp4g-1 kDZyEW"
                            >
                              0
                            </div>
                          </StyledComponent>
                        </CartCount__Dot>
                      </Transition>
                    </CSSTransition>
                  </div>
                </TransitionGroup>
              </span>
            </StyledComponent>
          </CartCount__AnimationStyle>
        </CartCount>
      </button>
    </Mutation>
  </ul>,
]
`;

exports[`<Nav> renders minimal nav when signed out 1`] = `
Array [
  <NavStyles
    data-test="nav"
  >
    <StyledComponent
      data-test="nav"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "NavStyles-sc-11c0d2g-0",
            "isStatic": false,
            "lastClassName": "fRhaWC",
            "rules": Array [
              "margin:0;padding:0;display:flex;justify-self:end;font-size:2rem;a,button{padding:1rem 3rem;display:flex;align-items:center;position:relative;text-transform:uppercase;font-weight:900;font-size:1em;background:none;border:0;cursor:pointer;color:",
              [Function],
              ";font-weight:800;@media (max-width:700px){font-size:10px;padding:0 10px;}&:before{content:\\"\\";width:2px;background:",
              [Function],
              ";height:100%;left:0;position:absolute;transform:skew(-20deg);top:0;bottom:0;}&:after{height:2px;background:red;content:\\"\\";width:0;position:absolute;transform:translateX(-50%);transition:width 0.4s;transition-timing-function:cubic-bezier(1,-0.65,0,2.31);left:50%;margin-top:2rem;}&:hover,&:focus{outline:none;&:after{width:calc(100% - 60px);}@media (max-width:700px){width:calc(100% - 10px);}}}@media (max-width:1300px){border-top:1px solid ",
              [Function],
              ";width:100%;justify-content:center;font-size:1.5rem;}",
            ],
          },
          "displayName": "NavStyles",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "NavStyles-sc-11c0d2g-0",
          "target": "ul",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <ul
        className="NavStyles-sc-11c0d2g-0 fRhaWC"
        data-test="nav"
      >
        <Link
          href="/items"
        >
          <a
            href="/items"
            onClick={[Function]}
          >
            Shop
          </a>
        </Link>
        <Link
          href="/signup"
        >
          <a
            href="/signup"
            onClick={[Function]}
          >
            Sign In
          </a>
        </Link>
      </ul>
    </StyledComponent>
  </NavStyles>,
  <StyledComponent
    data-test="nav"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "NavStyles-sc-11c0d2g-0",
          "isStatic": false,
          "lastClassName": "fRhaWC",
          "rules": Array [
            "margin:0;padding:0;display:flex;justify-self:end;font-size:2rem;a,button{padding:1rem 3rem;display:flex;align-items:center;position:relative;text-transform:uppercase;font-weight:900;font-size:1em;background:none;border:0;cursor:pointer;color:",
            [Function],
            ";font-weight:800;@media (max-width:700px){font-size:10px;padding:0 10px;}&:before{content:\\"\\";width:2px;background:",
            [Function],
            ";height:100%;left:0;position:absolute;transform:skew(-20deg);top:0;bottom:0;}&:after{height:2px;background:red;content:\\"\\";width:0;position:absolute;transform:translateX(-50%);transition:width 0.4s;transition-timing-function:cubic-bezier(1,-0.65,0,2.31);left:50%;margin-top:2rem;}&:hover,&:focus{outline:none;&:after{width:calc(100% - 60px);}@media (max-width:700px){width:calc(100% - 10px);}}}@media (max-width:1300px){border-top:1px solid ",
            [Function],
            ";width:100%;justify-content:center;font-size:1.5rem;}",
          ],
        },
        "displayName": "NavStyles",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "NavStyles-sc-11c0d2g-0",
        "target": "ul",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <ul
      className="NavStyles-sc-11c0d2g-0 fRhaWC"
      data-test="nav"
    >
      <Link
        href="/items"
      >
        <a
          href="/items"
          onClick={[Function]}
        >
          Shop
        </a>
      </Link>
      <Link
        href="/signup"
      >
        <a
          href="/signup"
          onClick={[Function]}
        >
          Sign In
        </a>
      </Link>
    </ul>
  </StyledComponent>,
  <ul
    className="NavStyles-sc-11c0d2g-0 fRhaWC"
    data-test="nav"
  >
    <Link
      href="/items"
    >
      <a
        href="/items"
        onClick={[Function]}
      >
        Shop
      </a>
    </Link>
    <Link
      href="/signup"
    >
      <a
        href="/signup"
        onClick={[Function]}
      >
        Sign In
      </a>
    </Link>
  </ul>,
]
`;
